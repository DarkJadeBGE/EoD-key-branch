-- MySQL Script generated by MySQL Workbench
-- 02/22/15 14:46:25
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`Buildings`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Buildings` (
  `idBuildings` INT NOT NULL,
  `BuildingName` VARCHAR(45) NULL,
  `BuildingAddress` VARCHAR(45) NULL,
  PRIMARY KEY (`idBuildings`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`GasReading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`GasReading` (
  `idBuilding` VARCHAR(45) NOT NULL,
  `GasReadingDateTime` DATETIME NOT NULL,
  `GasReadingOutput` INT NOT NULL,
  `idGasReading` INT NOT NULL,
  PRIMARY KEY (`idGasReading`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`ElectricityReading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`ElectricityReading` (
  `idBuilding` VARCHAR(45) NOT NULL,
  `ElectricityReadingDateTime` DATETIME NOT NULL,
  `ElectricityReadingOutput` INT NOT NULL,
  `idElectricityReading` INT NOT NULL,
  PRIMARY KEY (`idElectricityReading`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`TemperatureReading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`TemperatureReading` (
  `idBuilding` VARCHAR(45) NOT NULL,
  `TemperatureReadingDateTime` DATETIME NOT NULL,
  `TemperatureReadingOutput` INT NOT NULL,
  `idTemeratureReading` INT NOT NULL,
  PRIMARY KEY (`idTemeratureReading`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Buildings_has_GasReading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Buildings_has_GasReading` (
  `Buildings_idBuildings` INT NOT NULL,
  `GasReading_idGasReading` INT NOT NULL,
  PRIMARY KEY (`Buildings_idBuildings`, `GasReading_idGasReading`),
  INDEX `fk_Buildings_has_GasReading_GasReading1_idx` (`GasRead-ing_idGasReading` ASC),
  INDEX `fk_Buildings_has_GasReading_Buildings_idx` (`Build-ings_idBuildings` ASC),
  CONSTRAINT `fk_Buildings_has_GasReading_Buildings`
    FOREIGN KEY (`Buildings_idBuildings`)
    REFERENCES `mydb`.`Buildings` (`idBuildings`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Buildings_has_GasReading_GasReading1`
    FOREIGN KEY (`GasReading_idGasReading`)
    REFERENCES `mydb`.`GasReading` (`idGasReading`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Buildings_has_TemperatureReading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Buildings_has_TemperatureReading` (
  `Buildings_idBuildings` INT NOT NULL,
  `TemperatureReading_idTemeratureReading` INT NOT NULL,
  PRIMARY KEY (`Buildings_idBuildings`, `TemperatureRead-ing_idTemeratureReading`),
  INDEX `fk_Buildings_has_TemperatureReading_TemperatureReading1_idx` (`TemperatureReading_idTemeratureReading` ASC),
  INDEX `fk_Buildings_has_TemperatureReading_Buildings1_idx` (`Build-ings_idBuildings` ASC),
  CONSTRAINT `fk_Buildings_has_TemperatureReading_Buildings1`
    FOREIGN KEY (`Buildings_idBuildings`)
    REFERENCES `mydb`.`Buildings` (`idBuildings`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Buildings_has_TemperatureReading_TemperatureReading1`
    FOREIGN KEY (`TemperatureReading_idTemeratureReading`)
    REFERENCES `mydb`.`TemperatureReading` (`idTemeratureReading`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Buildings_has_ElectricityReading`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Buildings_has_ElectricityReading` (
  `Buildings_idBuildings` INT NOT NULL,
  `ElectricityReading_idElectricityReading` INT NOT NULL,
  PRIMARY KEY (`Buildings_idBuildings`, `ElectricityRead-ing_idElectricityReading`),
  INDEX `fk_Buildings_has_ElectricityReading_ElectricityReading1_idx` (`ElectricityReading_idElectricityReading` ASC),
  INDEX `fk_Buildings_has_ElectricityReading_Buildings1_idx` (`Build-ings_idBuildings` ASC),
  CONSTRAINT `fk_Buildings_has_ElectricityReading_Buildings1`
    FOREIGN KEY (`Buildings_idBuildings`)
    REFERENCES `mydb`.`Buildings` (`idBuildings`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Buildings_has_ElectricityReading_ElectricityReading1`
    FOREIGN KEY (`ElectricityReading_idElectricityReading`)
    REFERENCES `mydb`.`ElectricityReading` (`idElectricityReading`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


--------------------------------------------------------
-
THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-
--------------------------------------------------------